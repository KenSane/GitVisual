{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\EmotionDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionDetection = _ref => {\n  _s();\n  let {\n    setEmotion\n  } = _ref;\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\n        await faceapi.nets.faceLandmark68Net.loadFromUri('/models');\n        await faceapi.nets.faceRecognitionNet.loadFromUri('/models');\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\n        console.log('Models loaded successfully');\n        startVideo();\n      } catch (error) {\n        console.error('Error loading models: ', error);\n      }\n    };\n    const startVideo = () => {\n      navigator.mediaDevices.getUserMedia({\n        video: {}\n      }).then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          console.log('Video stream started');\n        }\n      }).catch(err => {\n        console.error('Error accessing webcam: ', err);\n      });\n    };\n    const detectEmotion = async () => {\n      if (videoRef.current) {\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        if (detections.length > 0) {\n          const emotions = detections[0].expressions;\n          const maxValue = Math.max(...Object.values(emotions));\n          const emotion = Object.keys(emotions).find(key => emotions[key] === maxValue);\n          setEmotion(emotion);\n          console.log(`Detected emotion: ${emotion}`);\n        }\n      }\n    };\n    loadModels();\n    const intervalId = setInterval(detectEmotion, 1000); // Check for emotions every second\n\n    return () => {\n      clearInterval(intervalId);\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n        console.log('Video stream stopped');\n      }\n    };\n  }, [setEmotion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionDetection, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = EmotionDetection;\nexport default EmotionDetection;\nvar _c;\n$RefreshReg$(_c, \"EmotionDetection\");","map":{"version":3,"names":["React","useEffect","useRef","faceapi","jsxDEV","_jsxDEV","EmotionDetection","_ref","_s","setEmotion","videoRef","loadModels","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","console","log","startVideo","error","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","detectEmotion","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","length","emotions","expressions","maxValue","Math","max","Object","values","emotion","keys","find","key","intervalId","setInterval","clearInterval","getTracks","forEach","track","stop","children","ref","autoPlay","muted","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/EmotionDetection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst EmotionDetection = ({ setEmotion }) => {\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri('/models');\r\n        await faceapi.nets.faceLandmark68Net.loadFromUri('/models');\r\n        await faceapi.nets.faceRecognitionNet.loadFromUri('/models');\r\n        await faceapi.nets.faceExpressionNet.loadFromUri('/models');\r\n        console.log('Models loaded successfully');\r\n        startVideo();\r\n      } catch (error) {\r\n        console.error('Error loading models: ', error);\r\n      }\r\n    };\r\n\r\n    const startVideo = () => {\r\n      navigator.mediaDevices.getUserMedia({ video: {} })\r\n        .then(stream => {\r\n          if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n            console.log('Video stream started');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('Error accessing webcam: ', err);\r\n        });\r\n    };\r\n\r\n    const detectEmotion = async () => {\r\n      if (videoRef.current) {\r\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\r\n        if (detections.length > 0) {\r\n          const emotions = detections[0].expressions;\r\n          const maxValue = Math.max(...Object.values(emotions));\r\n          const emotion = Object.keys(emotions).find(key => emotions[key] === maxValue);\r\n          setEmotion(emotion);\r\n          console.log(`Detected emotion: ${emotion}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadModels();\r\n\r\n    const intervalId = setInterval(detectEmotion, 1000); // Check for emotions every second\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n        console.log('Video stream stopped');\r\n      }\r\n    };\r\n  }, [setEmotion]);\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} autoPlay muted width=\"640\" height=\"480\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionDetection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}