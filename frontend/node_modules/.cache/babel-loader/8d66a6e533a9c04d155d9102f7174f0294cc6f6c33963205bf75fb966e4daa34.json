{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\RealTimePessimism.js\",\n  _s = $RefreshSig$();\n// RealTimePessimism.js\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePessimism = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [pessimismLevel, setPessimismLevel] = useState(null);\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPessimismLevel(data.pessimism_level);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    // Example data to send to the backend\n    const interactionData = {\n      token: authTokens.access,\n      // Include the JWT token here\n      interaction_type: 'quiz',\n      attempts: 3,\n      errors: 2,\n      correct: 1,\n      emotion: 'sad',\n      head_pose: 'down'\n    };\n    socket.onopen = () => {\n      socket.send(JSON.stringify(interactionData));\n    };\n    return () => socket.close();\n  }, [authTokens]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Pessimism Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pessimism Level: \", pessimismLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimePessimism, \"ku0Okzy3IxvYOjCMbCETVyqWsWo=\");\n_c = RealTimePessimism;\nexport default RealTimePessimism;\nvar _c;\n$RefreshReg$(_c, \"RealTimePessimism\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","RealTimePessimism","_ref","_s","userId","pessimismLevel","setPessimismLevel","authTokens","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","pessimism_level","onclose","interactionData","token","access","interaction_type","attempts","errors","correct","emotion","head_pose","send","stringify","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/RealTimePessimism.js"],"sourcesContent":["// RealTimePessimism.js\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst RealTimePessimism = ({ userId }) => {\r\n    const [pessimismLevel, setPessimismLevel] = useState(null);\r\n    const { authTokens } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connected');\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            setPessimismLevel(data.pessimism_level);\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket disconnected');\r\n        };\r\n\r\n        // Example data to send to the backend\r\n        const interactionData = {\r\n            token: authTokens.access,  // Include the JWT token here\r\n            interaction_type: 'quiz',\r\n            attempts: 3,\r\n            errors: 2,\r\n            correct: 1,\r\n            emotion: 'sad',\r\n            head_pose: 'down'\r\n        };\r\n\r\n        socket.onopen = () => {\r\n            socket.send(JSON.stringify(interactionData));\r\n        };\r\n\r\n        return () => socket.close();\r\n    }, [authTokens]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Real-Time Pessimism Detection</h1>\r\n            <p>Pessimism Level: {pessimismLevel}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealTimePessimism;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,iBAAiB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM;IAAEW;EAAW,CAAC,GAAGV,UAAU,CAACC,WAAW,CAAC;EAE9CH,SAAS,CAAC,MAAM;IACZ,MAAMa,MAAM,GAAG,IAAIC,SAAS,CAAC,6CAA6C,CAAC;IAE3ED,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC1B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCT,iBAAiB,CAACS,IAAI,CAACG,eAAe,CAAC;IAC3C,CAAC;IAEDV,MAAM,CAACW,OAAO,GAAG,MAAM;MACnBR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC,CAAC;;IAED;IACA,MAAMQ,eAAe,GAAG;MACpBC,KAAK,EAAEd,UAAU,CAACe,MAAM;MAAG;MAC3BC,gBAAgB,EAAE,MAAM;MACxBC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE;IACf,CAAC;IAEDpB,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBF,MAAM,CAACqB,IAAI,CAACb,IAAI,CAACc,SAAS,CAACV,eAAe,CAAC,CAAC;IAChD,CAAC;IAED,OAAO,MAAMZ,MAAM,CAACuB,KAAK,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACxB,UAAU,CAAC,CAAC;EAEhB,oBACIP,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAAgC,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCpC,OAAA;MAAAgC,QAAA,GAAG,mBAAiB,EAAC3B,cAAc;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACjC,EAAA,CA5CIF,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AA8CvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}