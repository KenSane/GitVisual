{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\OneDrive\\\\Desktop\\\\NEWTHESIS\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\Quizpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RealTimePessimism from './RealTimePessimism';\nimport './MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = [{\n  name: 'SQL SELECT',\n  question: 'Insert the missing statement to get all the columns from the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: '* FROM Customers;',\n  correctAnswer: 'SELECT'\n}, {\n  name: 'SQL WHERE',\n  question: 'Insert the missing statement to filter the rows in the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\n  correctAnswer: 'WHERE'\n}, {\n  name: 'SQL ORDER BY',\n  question: 'Insert the missing statement to sort the Customers table by LastName.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT * FROM Customers ORDER BY LastName;',\n  correctAnswer: 'ORDER BY'\n}, {\n  name: 'SQL INSERT INTO',\n  question: 'Insert the missing statement to add a new record to the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'INSERT INTO Customers (CustomerName, ContactName, Country) VALUES (\"Cardinal\", \"Tom B. Erichsen\", \"Norway\");',\n  correctAnswer: 'INSERT INTO'\n}, {\n  name: 'SQL UPDATE',\n  question: 'Insert the missing statement to update the CustomerName in the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'UPDATE Customers SET CustomerName = \"Alfred Schmidt\" WHERE CustomerID = 1;',\n  correctAnswer: 'UPDATE'\n}, {\n  name: 'SQL DELETE',\n  question: 'Insert the missing statement to delete a record from the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'DELETE FROM Customers WHERE CustomerID = 1;',\n  correctAnswer: 'DELETE'\n}, {\n  name: 'SQL JOIN',\n  question: 'Insert the missing statement to join Customers and Orders tables.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT Customers.CustomerName, Orders.OrderID FROM Customers JOIN Orders ON Customers.CustomerID = Orders.CustomerID;',\n  correctAnswer: 'JOIN'\n}, {\n  name: 'SQL GROUP BY',\n  question: 'Insert the missing statement to group the Customers table by Country.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country;',\n  correctAnswer: 'GROUP BY'\n}, {\n  name: 'SQL HAVING',\n  question: 'Insert the missing statement to filter groups in the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5;',\n  correctAnswer: 'HAVING'\n}, {\n  name: 'SQL ALIAS',\n  question: 'Insert the missing statement to create an alias for the Customers table.',\n  placeholder: 'Enter the missing keyword...',\n  query: 'SELECT c.CustomerName FROM Customers AS c;',\n  correctAnswer: 'AS'\n}];\nconst Quizpage = () => {\n  _s();\n  const [activeExercise, setActiveExercise] = useState(exercises[0]);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [attempts, setAttempts] = useState(0);\n  const [errors, setErrors] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const handleSubmit = () => {\n    setAttempts(attempts + 1);\n    if (userInput.trim().toUpperCase() === activeExercise.correctAnswer) {\n      setFeedback('Correct!');\n      setCorrect(correct + 1);\n    } else {\n      setFeedback('Incorrect. Please try again.');\n      setErrors(errors + 1);\n    }\n  };\n  const renderExercise = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [activeExercise.name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: activeExercise.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sql-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: activeExercise.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), \" \", activeExercise.query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modules-container\",\n    children: [/*#__PURE__*/_jsxDEV(RealTimePessimism, {\n      interactionType: activeExercise.name,\n      attempts: attempts,\n      errors: errors,\n      correct: correct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modules-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"modules-list\",\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `nav-item ${activeExercise.name === exercise.name ? 'active' : ''}`,\n          onClick: () => setActiveExercise(exercise),\n          children: exercise.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modules-content\",\n      children: renderExercise()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this);\n};\n_s(Quizpage, \"eXVM7/dpcO76Nj9ppPGpRKRfgaw=\");\n_c = Quizpage;\nexport default Quizpage;\nvar _c;\n$RefreshReg$(_c, \"Quizpage\");","map":{"version":3,"names":["React","useState","RealTimePessimism","jsxDEV","_jsxDEV","exercises","name","question","placeholder","query","correctAnswer","Quizpage","_s","activeExercise","setActiveExercise","userInput","setUserInput","feedback","setFeedback","attempts","setAttempts","errors","setErrors","correct","setCorrect","handleSubmit","trim","toUpperCase","renderExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","interactionType","map","exercise","index","_c","$RefreshReg$"],"sources":["C:/Users/janry/OneDrive/Desktop/NEWTHESIS/VisualQuery/frontend/src/component/Quizpage.js"],"sourcesContent":["  import React, { useState } from 'react';\r\n  import RealTimePessimism from './RealTimePessimism';\r\n  import './MainContent.css';\r\n\r\n  const exercises = [\r\n    {\r\n      name: 'SQL SELECT',\r\n      question: 'Insert the missing statement to get all the columns from the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: '* FROM Customers;',\r\n      correctAnswer: 'SELECT'\r\n    },\r\n    {\r\n      name: 'SQL WHERE',\r\n      question: 'Insert the missing statement to filter the rows in the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\r\n      correctAnswer: 'WHERE'\r\n    },\r\n    {\r\n      name: 'SQL ORDER BY',\r\n      question: 'Insert the missing statement to sort the Customers table by LastName.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT * FROM Customers ORDER BY LastName;',\r\n      correctAnswer: 'ORDER BY'\r\n    },\r\n    {\r\n      name: 'SQL INSERT INTO',\r\n      question: 'Insert the missing statement to add a new record to the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'INSERT INTO Customers (CustomerName, ContactName, Country) VALUES (\"Cardinal\", \"Tom B. Erichsen\", \"Norway\");',\r\n      correctAnswer: 'INSERT INTO'\r\n    },\r\n    {\r\n      name: 'SQL UPDATE',\r\n      question: 'Insert the missing statement to update the CustomerName in the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'UPDATE Customers SET CustomerName = \"Alfred Schmidt\" WHERE CustomerID = 1;',\r\n      correctAnswer: 'UPDATE'\r\n    },\r\n    {\r\n      name: 'SQL DELETE',\r\n      question: 'Insert the missing statement to delete a record from the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'DELETE FROM Customers WHERE CustomerID = 1;',\r\n      correctAnswer: 'DELETE'\r\n    },\r\n    {\r\n      name: 'SQL JOIN',\r\n      question: 'Insert the missing statement to join Customers and Orders tables.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT Customers.CustomerName, Orders.OrderID FROM Customers JOIN Orders ON Customers.CustomerID = Orders.CustomerID;',\r\n      correctAnswer: 'JOIN'\r\n    },\r\n    {\r\n      name: 'SQL GROUP BY',\r\n      question: 'Insert the missing statement to group the Customers table by Country.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country;',\r\n      correctAnswer: 'GROUP BY'\r\n    },\r\n    {\r\n      name: 'SQL HAVING',\r\n      question: 'Insert the missing statement to filter groups in the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5;',\r\n      correctAnswer: 'HAVING'\r\n    },\r\n    {\r\n      name: 'SQL ALIAS',\r\n      question: 'Insert the missing statement to create an alias for the Customers table.',\r\n      placeholder: 'Enter the missing keyword...',\r\n      query: 'SELECT c.CustomerName FROM Customers AS c;',\r\n      correctAnswer: 'AS'\r\n    }\r\n  ];\r\n\r\n  const Quizpage = () => {\r\n    const [activeExercise, setActiveExercise] = useState(exercises[0]);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n    const [attempts, setAttempts] = useState(0);\r\n    const [errors, setErrors] = useState(0);\r\n    const [correct, setCorrect] = useState(0);\r\n\r\n    const handleSubmit = () => {\r\n      setAttempts(attempts + 1);\r\n      if (userInput.trim().toUpperCase() === activeExercise.correctAnswer) {\r\n        setFeedback('Correct!');\r\n        setCorrect(correct + 1);\r\n      } else {\r\n        setFeedback('Incorrect. Please try again.');\r\n        setErrors(errors + 1);\r\n      }\r\n    };\r\n\r\n    const renderExercise = () => (\r\n      <div className=\"exercise\">\r\n        <h2>{activeExercise.name}:</h2>\r\n        <p>{activeExercise.question}</p>\r\n        <div className=\"sql-editor\">\r\n          <input\r\n            type=\"text\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            placeholder={activeExercise.placeholder}\r\n          /> {activeExercise.query}\r\n        </div>\r\n        <button onClick={handleSubmit}>Submit Answer</button>\r\n        <div className=\"feedback\">{feedback}</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"modules-container\">\r\n        <RealTimePessimism\r\n          interactionType={activeExercise.name}\r\n          attempts={attempts}\r\n          errors={errors}\r\n          correct={correct}\r\n        />\r\n        <div className=\"modules-sidebar\">\r\n          <h1>Exercises</h1>\r\n          <ul className=\"modules-list\">\r\n            {exercises.map((exercise, index) => (\r\n              <li\r\n                key={index}\r\n                className={`nav-item ${activeExercise.name === exercise.name ? 'active' : ''}`}\r\n                onClick={() => setActiveExercise(exercise)}\r\n              >\r\n                {exercise.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"modules-content\">\r\n          {renderExercise()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Quizpage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}