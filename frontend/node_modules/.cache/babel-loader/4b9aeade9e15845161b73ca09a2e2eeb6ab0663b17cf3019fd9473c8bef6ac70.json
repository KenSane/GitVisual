{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\RealTimePessimism.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport EmotionDetection from './EmotionDetection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePessimism = () => {\n  _s();\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  const [pessimismLevel, setPessimismLevel] = useState(null);\n  const [emotion, setEmotion] = useState('');\n  const [headPose, setHeadPose] = useState('');\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPessimismLevel(data.pessimism_level);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    const sendData = () => {\n      if (socket.readyState === WebSocket.OPEN) {\n        const interactionData = {\n          token: authTokens.access,\n          interaction_type: 'quiz',\n          attempts: 20,\n          errors: 15,\n          correct: 5,\n          emotion: emotion,\n          headPose: headPose\n        };\n        socket.send(JSON.stringify(interactionData));\n      }\n    };\n    const intervalId = setInterval(sendData, 5000); // Send data every 5 seconds\n\n    return () => {\n      clearInterval(intervalId);\n      socket.close();\n    };\n  }, [authTokens, emotion, headPose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Pessimism Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pessimism Level: \", pessimismLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmotionDetection, {\n      setEmotion: setEmotion,\n      setHeadPoseClassification: setHeadPose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Head Pose: \", headpose]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimePessimism, \"Q3VFVqJObASasoU8E67PP32igo8=\");\n_c = RealTimePessimism;\nexport default RealTimePessimism;\nvar _c;\n$RefreshReg$(_c, \"RealTimePessimism\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","EmotionDetection","jsxDEV","_jsxDEV","RealTimePessimism","_s","authTokens","pessimismLevel","setPessimismLevel","emotion","setEmotion","headPose","setHeadPose","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","pessimism_level","onclose","sendData","readyState","OPEN","interactionData","token","access","interaction_type","attempts","errors","correct","send","stringify","intervalId","setInterval","clearInterval","close","children","fileName","_jsxFileName","lineNumber","columnNumber","setHeadPoseClassification","headpose","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/RealTimePessimism.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\nimport EmotionDetection from './EmotionDetection';\r\n\r\nconst RealTimePessimism = () => {\r\n  const { authTokens } = useContext(AuthContext);\r\n  const [pessimismLevel, setPessimismLevel] = useState(null);\r\n  const [emotion, setEmotion] = useState('');\r\n  const [headPose, setHeadPose] = useState('');\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\r\n\r\n    socket.onopen = () => {\r\n      console.log('WebSocket connected');\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setPessimismLevel(data.pessimism_level);\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n    };\r\n\r\n    const sendData = () => {\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        const interactionData = {\r\n          token: authTokens.access,\r\n          interaction_type: 'quiz',\r\n          attempts: 20,\r\n          errors: 15,\r\n          correct: 5,\r\n          emotion: emotion,\r\n          headPose: headPose,\r\n        };\r\n        socket.send(JSON.stringify(interactionData));\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(sendData, 5000); // Send data every 5 seconds\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      socket.close();\r\n    };\r\n  }, [authTokens, emotion, headPose]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Real-Time Pessimism Detection</h1>\r\n      <p>Pessimism Level: {pessimismLevel}</p>\r\n      <EmotionDetection setEmotion={setEmotion} setHeadPoseClassification={setHeadPose} />\r\n      <p>Head Pose: {headpose}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealTimePessimism;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}