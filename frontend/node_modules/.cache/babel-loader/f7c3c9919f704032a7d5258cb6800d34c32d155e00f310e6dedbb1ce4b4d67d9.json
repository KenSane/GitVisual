{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\RealTimePessimism.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePessimism = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [pessimismLevel, setPessimismLevel] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      // Example data to send to the backend\n      const interactionData = {\n        user_id: userId,\n        interaction_type: 'quiz',\n        attempts: 3,\n        errors: 2,\n        correct: 1,\n        emotion: 'sad',\n        head_pose: 'down'\n      };\n      socket.send(JSON.stringify(interactionData));\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPessimismLevel(data.pessimism_level);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    return () => socket.close();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Pessimism Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pessimism Level: \", pessimismLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimePessimism, \"R3ULBeL5TtGII65p2IZkaVWHVq8=\");\n_c = RealTimePessimism;\nexport default RealTimePessimism;\nvar _c;\n$RefreshReg$(_c, \"RealTimePessimism\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RealTimePessimism","_ref","_s","userId","pessimismLevel","setPessimismLevel","socket","WebSocket","onopen","console","log","interactionData","user_id","interaction_type","attempts","errors","correct","emotion","head_pose","send","JSON","stringify","onmessage","event","data","parse","pessimism_level","onclose","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/RealTimePessimism.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst RealTimePessimism = ({ userId }) => {\r\n    const [pessimismLevel, setPessimismLevel] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:8000/ws/pessimism_detection/');\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connected');\r\n            // Example data to send to the backend\r\n            const interactionData = {\r\n                user_id: userId,\r\n                interaction_type: 'quiz',\r\n                attempts: 3,\r\n                errors: 2,\r\n                correct: 1,\r\n                emotion: 'sad',\r\n                head_pose: 'down'\r\n            };\r\n            socket.send(JSON.stringify(interactionData));\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            setPessimismLevel(data.pessimism_level);\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket disconnected');\r\n        };\r\n\r\n        return () => socket.close();\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Real-Time Pessimism Detection</h1>\r\n            <p>Pessimism Level: {pessimismLevel}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealTimePessimism;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACZ,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,6CAA6C,CAAC;IAE3ED,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;MACA,MAAMC,eAAe,GAAG;QACpBC,OAAO,EAAET,MAAM;QACfU,gBAAgB,EAAE,MAAM;QACxBC,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,KAAK;QACdC,SAAS,EAAE;MACf,CAAC;MACDZ,MAAM,CAACa,IAAI,CAACC,IAAI,CAACC,SAAS,CAACV,eAAe,CAAC,CAAC;IAChD,CAAC;IAEDL,MAAM,CAACgB,SAAS,GAAIC,KAAK,IAAK;MAC1B,MAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MACnCnB,iBAAiB,CAACmB,IAAI,CAACE,eAAe,CAAC;IAC3C,CAAC;IAEDpB,MAAM,CAACqB,OAAO,GAAG,MAAM;MACnBlB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAED,OAAO,MAAMJ,MAAM,CAACsB,KAAK,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACzB,MAAM,CAAC,CAAC;EAEZ,oBACIJ,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtClC,OAAA;MAAA8B,QAAA,GAAG,mBAAiB,EAACzB,cAAc;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAvCIF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AAyCvB,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}