{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\EmotionDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionDetection = _ref => {\n  _s();\n  let {\n    setEmotion,\n    setHeadPoseClassification\n  } = _ref;\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        await faceapi.nets.tinyFaceDetector.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/tiny_face_detector_model-weights_manifest.json');\n        await faceapi.nets.faceLandmark68Net.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_landmark_68_model-weights_manifest.json');\n        await faceapi.nets.faceRecognitionNet.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_recognition_model-weights_manifest.json');\n        await faceapi.nets.faceExpressionNet.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_expression_model-weights_manifest.json');\n        console.log('Models loaded successfully');\n        startVideo();\n      } catch (error) {\n        console.error('Error loading models:', error);\n      }\n    };\n    const startVideo = () => {\n      navigator.mediaDevices.getUserMedia({\n        video: {}\n      }).then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          console.log('Video stream started');\n        } else {\n          console.error('Video reference is not available');\n        }\n      }).catch(err => {\n        console.error('Error accessing webcam:', err);\n      });\n    };\n    const estimateHeadPose = landmarks => {\n      const eyeLeft = landmarks.getLeftEye();\n      const eyeRight = landmarks.getRightEye();\n      const nose = landmarks.getNose();\n      const mouth = landmarks.getMouth();\n      const yaw = Math.atan2(eyeRight[0].y - eyeLeft[0].y, eyeRight[0].x - eyeLeft[0].x) * 180 / Math.PI;\n      const pitch = Math.atan2(mouth[3].y - nose[0].y, mouth[3].x - nose[0].x) * 180 / Math.PI;\n      const roll = Math.atan2(nose[0].y - mouth[0].y, nose[0].x - mouth[0].x) * 180 / Math.PI;\n      return {\n        yaw,\n        pitch,\n        roll\n      };\n    };\n    const classifyHeadPose = _ref2 => {\n      let {\n        yaw,\n        pitch,\n        roll\n      } = _ref2;\n      const thresholds = {\n        yaw: 10,\n        // Threshold in degrees for left/right turning\n        pitch: 10,\n        // Threshold in degrees for up/down tilting\n        roll: 10 // Threshold in degrees for tilting to the sides\n      };\n\n      if (pitch > thresholds.pitch) {\n        return 'down';\n      } else if (pitch < -thresholds.pitch) {\n        return 'up';\n      } else if (yaw > thresholds.yaw) {\n        return 'right';\n      } else if (yaw < -thresholds.yaw) {\n        return 'left';\n      } else {\n        return 'neutral';\n      }\n    };\n    const detectEmotionAndHeadPose = async () => {\n      if (videoRef.current) {\n        console.log('Performing detection...');\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        console.log('Detections:', detections);\n        if (detections.length > 0) {\n          const emotions = detections[0].expressions;\n          const landmarks = detections[0].landmarks;\n          const maxValue = Math.max(...Object.values(emotions));\n          const emotion = Object.keys(emotions).find(key => emotions[key] === maxValue);\n          setEmotion(emotion);\n          console.log(`Detected emotion: ${emotion}`);\n          const headPose = estimateHeadPose(landmarks);\n          console.log('Head pose:', headPose);\n          const headPoseClassification = classifyHeadPose(headPose);\n          setHeadPoseClassification(headPoseClassification);\n          console.log(`Estimated head pose: Yaw: ${headPose.yaw}, Pitch: ${headPose.pitch}, Roll: ${headPose.roll}`);\n          console.log(`Head pose classification: ${headPoseClassification}`);\n        } else {\n          console.log('No faces detected');\n        }\n      } else {\n        console.error('Video reference is not available during emotion detection');\n      }\n    };\n    loadModels();\n    const intervalId = setInterval(detectEmotionAndHeadPose, 1000); // Check for emotions and head pose every second\n\n    return () => {\n      clearInterval(intervalId);\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n        console.log('Video stream stopped');\n      }\n    };\n  }, [setEmotion, setHeadPoseClassification]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionDetection, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = EmotionDetection;\nexport default EmotionDetection;\nvar _c;\n$RefreshReg$(_c, \"EmotionDetection\");","map":{"version":3,"names":["React","useEffect","useRef","faceapi","jsxDEV","_jsxDEV","EmotionDetection","_ref","_s","setEmotion","setHeadPoseClassification","videoRef","loadModels","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","console","log","startVideo","error","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","estimateHeadPose","landmarks","eyeLeft","getLeftEye","eyeRight","getRightEye","nose","getNose","mouth","getMouth","yaw","Math","atan2","y","x","PI","pitch","roll","classifyHeadPose","_ref2","thresholds","detectEmotionAndHeadPose","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","length","emotions","expressions","maxValue","max","Object","values","emotion","keys","find","key","headPose","headPoseClassification","intervalId","setInterval","clearInterval","getTracks","forEach","track","stop","style","display","children","ref","autoPlay","muted","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/EmotionDetection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst EmotionDetection = ({ setEmotion, setHeadPoseClassification }) => {\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/tiny_face_detector_model-weights_manifest.json');\r\n        await faceapi.nets.faceLandmark68Net.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_landmark_68_model-weights_manifest.json');\r\n        await faceapi.nets.faceRecognitionNet.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_recognition_model-weights_manifest.json');\r\n        await faceapi.nets.faceExpressionNet.loadFromUri('https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights/face_expression_model-weights_manifest.json');\r\n        console.log('Models loaded successfully');\r\n        startVideo();\r\n      } catch (error) {\r\n        console.error('Error loading models:', error);\r\n      }\r\n    };\r\n\r\n    const startVideo = () => {\r\n      navigator.mediaDevices.getUserMedia({ video: {} })\r\n        .then(stream => {\r\n          if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n            console.log('Video stream started');\r\n          } else {\r\n            console.error('Video reference is not available');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('Error accessing webcam:', err);\r\n        });\r\n    };\r\n\r\n    const estimateHeadPose = (landmarks) => {\r\n      const eyeLeft = landmarks.getLeftEye();\r\n      const eyeRight = landmarks.getRightEye();\r\n      const nose = landmarks.getNose();\r\n      const mouth = landmarks.getMouth();\r\n\r\n      const yaw = Math.atan2(eyeRight[0].y - eyeLeft[0].y, eyeRight[0].x - eyeLeft[0].x) * 180 / Math.PI;\r\n      const pitch = Math.atan2(mouth[3].y - nose[0].y, mouth[3].x - nose[0].x) * 180 / Math.PI;\r\n      const roll = Math.atan2(nose[0].y - mouth[0].y, nose[0].x - mouth[0].x) * 180 / Math.PI;\r\n\r\n      return { yaw, pitch, roll };\r\n    };\r\n\r\n    const classifyHeadPose = ({ yaw, pitch, roll }) => {\r\n      const thresholds = {\r\n        yaw: 10,   // Threshold in degrees for left/right turning\r\n        pitch: 10, // Threshold in degrees for up/down tilting\r\n        roll: 10   // Threshold in degrees for tilting to the sides\r\n      };\r\n\r\n      if (pitch > thresholds.pitch) {\r\n        return 'down';\r\n      } else if (pitch < -thresholds.pitch) {\r\n        return 'up';\r\n      } else if (yaw > thresholds.yaw) {\r\n        return 'right';\r\n      } else if (yaw < -thresholds.yaw) {\r\n        return 'left';\r\n      } else {\r\n        return 'neutral';\r\n      }\r\n    };\r\n\r\n    const detectEmotionAndHeadPose = async () => {\r\n      if (videoRef.current) {\r\n        console.log('Performing detection...');\r\n        const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\r\n        console.log('Detections:', detections);\r\n\r\n        if (detections.length > 0) {\r\n          const emotions = detections[0].expressions;\r\n          const landmarks = detections[0].landmarks;\r\n          const maxValue = Math.max(...Object.values(emotions));\r\n          const emotion = Object.keys(emotions).find(key => emotions[key] === maxValue);\r\n          setEmotion(emotion);\r\n          console.log(`Detected emotion: ${emotion}`);\r\n\r\n          const headPose = estimateHeadPose(landmarks);\r\n          console.log('Head pose:', headPose);\r\n          const headPoseClassification = classifyHeadPose(headPose);\r\n          setHeadPoseClassification(headPoseClassification);\r\n          console.log(`Estimated head pose: Yaw: ${headPose.yaw}, Pitch: ${headPose.pitch}, Roll: ${headPose.roll}`);\r\n          console.log(`Head pose classification: ${headPoseClassification}`);\r\n        } else {\r\n          console.log('No faces detected');\r\n        }\r\n      } else {\r\n        console.error('Video reference is not available during emotion detection');\r\n      }\r\n    };\r\n\r\n    loadModels();\r\n\r\n    const intervalId = setInterval(detectEmotionAndHeadPose, 1000); // Check for emotions and head pose every second\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n        console.log('Video stream stopped');\r\n      }\r\n    };\r\n  }, [setEmotion, setHeadPoseClassification]);\r\n\r\n  return (\r\n    <div style={{ display: 'none' }}>\r\n      <video ref={videoRef} autoPlay muted width=\"640\" height=\"480\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionDetection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}