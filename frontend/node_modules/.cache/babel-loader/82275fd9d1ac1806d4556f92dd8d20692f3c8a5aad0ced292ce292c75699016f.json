{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\HeadPoseEstimation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as mp from '@mediapipe/face_mesh';\nimport * as cam from '@mediapipe/camera_utils';\nimport * as draw from '@mediapipe/drawing_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeadPoseEstimation = _ref => {\n  _s();\n  let {\n    setHeadPose\n  } = _ref;\n  const videoRef = useRef(null);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  useEffect(() => {\n    const faceMesh = new mp.FaceMesh({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      refineLandmarks: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(onResults);\n    let camera;\n    if (typeof videoRef.current !== 'undefined' && videoRef.current !== null) {\n      camera = new cam.Camera(videoRef.current, {\n        onFrame: async () => {\n          await faceMesh.send({\n            image: videoRef.current\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    }\n    function onResults(results) {\n      const videoWidth = videoRef.current.videoWidth;\n      const videoHeight = videoRef.current.videoHeight;\n      if (results.multiFaceLandmarks && results.multiFaceLandmarks.length > 0) {\n        const landmarks = results.multiFaceLandmarks[0];\n        const noseTip = landmarks[1];\n        const leftCheek = landmarks[33];\n        const rightCheek = landmarks[263];\n        const dx = rightCheek.x - leftCheek.x;\n        const dy = rightCheek.y - leftCheek.y;\n        const angleY = Math.atan2(dy, dx) * (180 / Math.PI);\n        const noseBottom = landmarks[2];\n        const chin = landmarks[152];\n        const dz = chin.y - noseBottom.y;\n        const angleX = Math.atan2(dz, dx) * (180 / Math.PI);\n        let pose = 'forward';\n        if (angleY < -10) {\n          pose = 'left';\n        } else if (angleY > 10) {\n          pose = 'right';\n        } else if (angleX < -10) {\n          pose = 'up';\n        } else if (angleX > 10) {\n          pose = 'down';\n        }\n        setHeadPose(pose);\n      }\n    }\n    return () => {\n      if (camera) {\n        camera.stop();\n      }\n    };\n  }, [setHeadPose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: isCameraReady ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(HeadPoseEstimation, \"93awILjT4r1KukIHFScK0g+XsQg=\");\n_c = HeadPoseEstimation;\nexport default HeadPoseEstimation;\nvar _c;\n$RefreshReg$(_c, \"HeadPoseEstimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mp","cam","draw","jsxDEV","_jsxDEV","HeadPoseEstimation","_ref","_s","setHeadPose","videoRef","isCameraReady","setIsCameraReady","faceMesh","FaceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","camera","current","Camera","onFrame","send","image","width","height","start","results","videoWidth","videoHeight","multiFaceLandmarks","length","landmarks","noseTip","leftCheek","rightCheek","dx","x","dy","y","angleY","Math","atan2","PI","noseBottom","chin","dz","angleX","pose","stop","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/HeadPoseEstimation.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as mp from '@mediapipe/face_mesh';\r\nimport * as cam from '@mediapipe/camera_utils';\r\nimport * as draw from '@mediapipe/drawing_utils';\r\n\r\nconst HeadPoseEstimation = ({ setHeadPose }) => {\r\n  const videoRef = useRef(null);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const faceMesh = new mp.FaceMesh({\r\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`,\r\n    });\r\n\r\n    faceMesh.setOptions({\r\n      maxNumFaces: 1,\r\n      refineLandmarks: true,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    faceMesh.onResults(onResults);\r\n\r\n    let camera;\r\n    if (typeof videoRef.current !== 'undefined' && videoRef.current !== null) {\r\n      camera = new cam.Camera(videoRef.current, {\r\n        onFrame: async () => {\r\n          await faceMesh.send({ image: videoRef.current });\r\n        },\r\n        width: 640,\r\n        height: 480,\r\n      });\r\n      camera.start();\r\n    }\r\n\r\n    function onResults(results) {\r\n      const videoWidth = videoRef.current.videoWidth;\r\n      const videoHeight = videoRef.current.videoHeight;\r\n\r\n      if (results.multiFaceLandmarks && results.multiFaceLandmarks.length > 0) {\r\n        const landmarks = results.multiFaceLandmarks[0];\r\n\r\n        const noseTip = landmarks[1];\r\n        const leftCheek = landmarks[33];\r\n        const rightCheek = landmarks[263];\r\n\r\n        const dx = rightCheek.x - leftCheek.x;\r\n        const dy = rightCheek.y - leftCheek.y;\r\n        const angleY = Math.atan2(dy, dx) * (180 / Math.PI);\r\n\r\n        const noseBottom = landmarks[2];\r\n        const chin = landmarks[152];\r\n\r\n        const dz = chin.y - noseBottom.y;\r\n        const angleX = Math.atan2(dz, dx) * (180 / Math.PI);\r\n\r\n        let pose = 'forward';\r\n        if (angleY < -10) {\r\n          pose = 'left';\r\n        } else if (angleY > 10) {\r\n          pose = 'right';\r\n        } else if (angleX < -10) {\r\n          pose = 'up';\r\n        } else if (angleX > 10) {\r\n          pose = 'down';\r\n        }\r\n\r\n        setHeadPose(pose);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (camera) {\r\n        camera.stop();\r\n      }\r\n    };\r\n  }, [setHeadPose]);\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} style={{ display: isCameraReady ? 'block' : 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadPoseEstimation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}