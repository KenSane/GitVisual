{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\Music\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\EmotionDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionDetection = _ref => {\n  _s();\n  let {\n    setEmotion\n  } = _ref;\n  const videoRef = useRef();\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = '/models';\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n      await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);\n    };\n    const startVideo = () => {\n      navigator.getUserMedia({\n        video: {}\n      }, stream => videoRef.current.srcObject = stream, err => console.error(err));\n    };\n    const handleVideoOnPlay = () => {\n      setInterval(async () => {\n        if (videoRef.current && videoRef.current.readyState === 4) {\n          const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceExpressions();\n          if (detections.length > 0) {\n            const maxEmotion = Object.entries(detections[0].expressions).reduce((a, b) => a[1] > b[1] ? a : b);\n            setEmotion(maxEmotion[0]);\n          }\n        }\n      }, 1000); // Check every 1 second\n    };\n\n    videoRef.current && loadModels().then(startVideo);\n    videoRef.current && videoRef.current.addEventListener('play', handleVideoOnPlay);\n  }, [setEmotion]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    muted: true,\n    width: \"640\",\n    height: \"480\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(EmotionDetection, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = EmotionDetection;\nexport default EmotionDetection;\nvar _c;\n$RefreshReg$(_c, \"EmotionDetection\");","map":{"version":3,"names":["React","useRef","useEffect","faceapi","jsxDEV","_jsxDEV","EmotionDetection","_ref","_s","setEmotion","videoRef","loadModels","MODEL_URL","nets","tinyFaceDetector","loadFromUri","faceExpressionNet","startVideo","navigator","getUserMedia","video","stream","current","srcObject","err","console","error","handleVideoOnPlay","setInterval","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceExpressions","length","maxEmotion","Object","entries","expressions","reduce","a","b","then","addEventListener","ref","autoPlay","muted","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janry/Music/VisualQuery/frontend/src/component/EmotionDetection.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst EmotionDetection = ({ setEmotion }) => {\r\n  const videoRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = '/models';\r\n      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n      await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);\r\n    };\r\n\r\n    const startVideo = () => {\r\n      navigator.getUserMedia(\r\n        { video: {} },\r\n        stream => (videoRef.current.srcObject = stream),\r\n        err => console.error(err)\r\n      );\r\n    };\r\n\r\n    const handleVideoOnPlay = () => {\r\n      setInterval(async () => {\r\n        if (videoRef.current && videoRef.current.readyState === 4) {\r\n          const detections = await faceapi\r\n            .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceExpressions();\r\n\r\n          if (detections.length > 0) {\r\n            const maxEmotion = Object.entries(detections[0].expressions).reduce((a, b) => (a[1] > b[1] ? a : b));\r\n            setEmotion(maxEmotion[0]);\r\n          }\r\n        }\r\n      }, 1000); // Check every 1 second\r\n    };\r\n\r\n    videoRef.current && loadModels().then(startVideo);\r\n    videoRef.current && videoRef.current.addEventListener('play', handleVideoOnPlay);\r\n  }, [setEmotion]);\r\n\r\n  return <video ref={videoRef} autoPlay muted width=\"640\" height=\"480\" />;\r\n};\r\n\r\nexport default EmotionDetection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACtC,MAAMG,QAAQ,GAAGT,MAAM,CAAC,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,SAAS,GAAG,SAAS;MAC3B,MAAMT,OAAO,CAACU,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACH,SAAS,CAAC;MAC1D,MAAMT,OAAO,CAACU,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACH,SAAS,CAAC;IAC7D,CAAC;IAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;MACvBC,SAAS,CAACC,YAAY,CACpB;QAAEC,KAAK,EAAE,CAAC;MAAE,CAAC,EACbC,MAAM,IAAKX,QAAQ,CAACY,OAAO,CAACC,SAAS,GAAGF,MAAO,EAC/CG,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAC1B,CAAC;IACH,CAAC;IAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;MAC9BC,WAAW,CAAC,YAAY;QACtB,IAAIlB,QAAQ,CAACY,OAAO,IAAIZ,QAAQ,CAACY,OAAO,CAACO,UAAU,KAAK,CAAC,EAAE;UACzD,MAAMC,UAAU,GAAG,MAAM3B,OAAO,CAC7B4B,cAAc,CAACrB,QAAQ,CAACY,OAAO,EAAE,IAAInB,OAAO,CAAC6B,uBAAuB,CAAC,CAAC,CAAC,CACvEC,mBAAmB,CAAC,CAAC;UAExB,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;YACzB,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACP,UAAU,CAAC,CAAC,CAAC,CAACQ,WAAW,CAAC,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAE,CAAC;YACpGhC,UAAU,CAAC0B,UAAU,CAAC,CAAC,CAAC,CAAC;UAC3B;QACF;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC;;IAEDzB,QAAQ,CAACY,OAAO,IAAIX,UAAU,CAAC,CAAC,CAAC+B,IAAI,CAACzB,UAAU,CAAC;IACjDP,QAAQ,CAACY,OAAO,IAAIZ,QAAQ,CAACY,OAAO,CAACqB,gBAAgB,CAAC,MAAM,EAAEhB,iBAAiB,CAAC;EAClF,CAAC,EAAE,CAAClB,UAAU,CAAC,CAAC;EAEhB,oBAAOJ,OAAA;IAAOuC,GAAG,EAAElC,QAAS;IAACmC,QAAQ;IAACC,KAAK;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE,CAAC;AAAC5C,EAAA,CAtCIF,gBAAgB;AAAA+C,EAAA,GAAhB/C,gBAAgB;AAwCtB,eAAeA,gBAAgB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}