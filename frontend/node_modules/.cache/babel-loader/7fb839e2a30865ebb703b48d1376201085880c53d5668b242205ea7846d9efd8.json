{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janry\\\\OneDrive\\\\Desktop\\\\NEWTHESIS\\\\VisualQuery\\\\frontend\\\\src\\\\component\\\\Quizpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RealTimePessimism from './RealTimePessimism';\nimport './MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  name: 'SQL SELECT',\n  exercises: [{\n    question: 'Insert the missing statement to get all the columns from the Customers table.',\n    placeholder: 'Enter the missing keyword...',\n    query: '* FROM Customers;',\n    correctAnswer: 'SELECT'\n  }, {\n    question: 'Insert the missing statement to filter the rows in the Customers table.',\n    placeholder: 'Enter the missing keyword...',\n    query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\n    correctAnswer: 'WHERE'\n  }\n  // Add more exercises as needed\n  ]\n}, {\n  name: 'SQL WHERE',\n  exercises: [{\n    question: 'Insert the missing statement to filter the rows in the Customers table.',\n    placeholder: 'Enter the missing keyword...',\n    query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\n    correctAnswer: 'WHERE'\n  }\n  // Add more exercises as needed\n  ]\n}\n// Add more categories and exercises as needed\n];\n\nconst Quizpage = () => {\n  _s();\n  const [selectedCategoryIndex, setSelectedCategoryIndex] = useState(0);\n  const [selectedExerciseIndex, setSelectedExerciseIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [progress, setProgress] = useState(categories.map(() => 0));\n  const currentCategory = categories[selectedCategoryIndex];\n  const currentExercise = currentCategory.exercises[selectedExerciseIndex];\n  const handleSubmit = () => {\n    if (userInput.trim().toUpperCase() === currentExercise.correctAnswer) {\n      setFeedback('Correct!');\n      setProgress(prevProgress => {\n        const newProgress = [...prevProgress];\n        newProgress[selectedCategoryIndex] += 1;\n        return newProgress;\n      });\n      if (selectedExerciseIndex < currentCategory.exercises.length - 1) {\n        setSelectedExerciseIndex(selectedExerciseIndex + 1);\n      } else {\n        setSelectedExerciseIndex(0);\n      }\n    } else {\n      setFeedback('Incorrect. Please try again.');\n    }\n  };\n  const renderExercise = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [currentCategory.name, \" - Exercise \", selectedExerciseIndex + 1, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentExercise.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sql-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: currentExercise.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \", currentExercise.query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n  const renderProgressBar = () => {\n    const progressPercentage = progress[selectedCategoryIndex] / currentCategory.exercises.length * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(RealTimePessimism, {\n      interactionType: currentCategory.name,\n      attempts: selectedExerciseIndex,\n      errors: progress[selectedCategoryIndex] - selectedExerciseIndex,\n      correct: progress[selectedCategoryIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-list\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `category-item ${selectedCategoryIndex === index ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedCategoryIndex(index);\n            setSelectedExerciseIndex(0);\n            setFeedback('');\n            setUserInput('');\n          },\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [renderProgressBar(), renderExercise()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Quizpage, \"lt/HPyJC8oOtgjQ6/+aDEtwUA1Y=\");\n_c = Quizpage;\nexport default Quizpage;\nvar _c;\n$RefreshReg$(_c, \"Quizpage\");","map":{"version":3,"names":["React","useState","RealTimePessimism","jsxDEV","_jsxDEV","categories","name","exercises","question","placeholder","query","correctAnswer","Quizpage","_s","selectedCategoryIndex","setSelectedCategoryIndex","selectedExerciseIndex","setSelectedExerciseIndex","userInput","setUserInput","feedback","setFeedback","progress","setProgress","map","currentCategory","currentExercise","handleSubmit","trim","toUpperCase","prevProgress","newProgress","length","renderExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","renderProgressBar","progressPercentage","style","width","interactionType","attempts","errors","correct","category","index","_c","$RefreshReg$"],"sources":["C:/Users/janry/OneDrive/Desktop/NEWTHESIS/VisualQuery/frontend/src/component/Quizpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RealTimePessimism from './RealTimePessimism';\r\nimport './MainContent.css';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'SQL SELECT',\r\n    exercises: [\r\n      {\r\n        question: 'Insert the missing statement to get all the columns from the Customers table.',\r\n        placeholder: 'Enter the missing keyword...',\r\n        query: '* FROM Customers;',\r\n        correctAnswer: 'SELECT'\r\n      },\r\n      {\r\n        question: 'Insert the missing statement to filter the rows in the Customers table.',\r\n        placeholder: 'Enter the missing keyword...',\r\n        query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\r\n        correctAnswer: 'WHERE'\r\n      },\r\n      // Add more exercises as needed\r\n    ]\r\n  },\r\n  {\r\n    name: 'SQL WHERE',\r\n    exercises: [\r\n      {\r\n        question: 'Insert the missing statement to filter the rows in the Customers table.',\r\n        placeholder: 'Enter the missing keyword...',\r\n        query: 'SELECT * FROM Customers WHERE CustomerID = 1;',\r\n        correctAnswer: 'WHERE'\r\n      },\r\n      // Add more exercises as needed\r\n    ]\r\n  },\r\n  // Add more categories and exercises as needed\r\n];\r\n\r\nconst Quizpage = () => {\r\n  const [selectedCategoryIndex, setSelectedCategoryIndex] = useState(0);\r\n  const [selectedExerciseIndex, setSelectedExerciseIndex] = useState(0);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [progress, setProgress] = useState(categories.map(() => 0));\r\n\r\n  const currentCategory = categories[selectedCategoryIndex];\r\n  const currentExercise = currentCategory.exercises[selectedExerciseIndex];\r\n\r\n  const handleSubmit = () => {\r\n    if (userInput.trim().toUpperCase() === currentExercise.correctAnswer) {\r\n      setFeedback('Correct!');\r\n      setProgress((prevProgress) => {\r\n        const newProgress = [...prevProgress];\r\n        newProgress[selectedCategoryIndex] += 1;\r\n        return newProgress;\r\n      });\r\n      if (selectedExerciseIndex < currentCategory.exercises.length - 1) {\r\n        setSelectedExerciseIndex(selectedExerciseIndex + 1);\r\n      } else {\r\n        setSelectedExerciseIndex(0);\r\n      }\r\n    } else {\r\n      setFeedback('Incorrect. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderExercise = () => (\r\n    <div className=\"exercise\">\r\n      <h2>{currentCategory.name} - Exercise {selectedExerciseIndex + 1}:</h2>\r\n      <p>{currentExercise.question}</p>\r\n      <div className=\"sql-editor\">\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder={currentExercise.placeholder}\r\n        /> {currentExercise.query}\r\n      </div>\r\n      <button onClick={handleSubmit}>Submit Answer</button>\r\n      <div className=\"feedback\">{feedback}</div>\r\n    </div>\r\n  );\r\n\r\n  const renderProgressBar = () => {\r\n    const progressPercentage = (progress[selectedCategoryIndex] / currentCategory.exercises.length) * 100;\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <div className=\"progress\" style={{ width: `${progressPercentage}%` }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <RealTimePessimism\r\n        interactionType={currentCategory.name}\r\n        attempts={selectedExerciseIndex}\r\n        errors={progress[selectedCategoryIndex] - selectedExerciseIndex}\r\n        correct={progress[selectedCategoryIndex]}\r\n      />\r\n      <div className=\"sidebar\">\r\n        <h1>Exercises</h1>\r\n        <ul className=\"category-list\">\r\n          {categories.map((category, index) => (\r\n            <li\r\n              key={index}\r\n              className={`category-item ${selectedCategoryIndex === index ? 'active' : ''}`}\r\n              onClick={() => {\r\n                setSelectedCategoryIndex(index);\r\n                setSelectedExerciseIndex(0);\r\n                setFeedback('');\r\n                setUserInput('');\r\n              }}\r\n            >\r\n              {category.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"content\">\r\n        {renderProgressBar()}\r\n        {renderExercise()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quizpage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}